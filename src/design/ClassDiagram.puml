@startuml
package app {

  class Main {
    - static final String USER
    - static final String PASSWORD
    - static final String URL
    - static final String DB
    - static ConnectionPool connectionPool
    + static void main(String[] args)

  }


  package controllers {
    class AccountController{
    + static void addRoutes(Javalin app, ConnectionPool connectionPool)
    + static void login(Context ctx, ConnectionPool connectionPool)
    + static void logout(Context ctx)
    + static void createAccount(Context ctx, ConnectionPool connectionPool)
    + static void salesrepShowAllCustomersPage(Context ctx, ConnectionPool connectionPool)
    + static void salesrepShowCustomerPage(Context ctx, ConnectionPool connectionPool)
      }
    class OrderController{
    + static void addRoutes(Javalin app, ConnectionPool connectionPool)
    + static void postCarportCustomerInfo(Context ctx, ConnectionPool connectionPool)
    + static void salesrepShowAllOrdersPage(Context ctx, ConnectionPool connectionPool)
    + static void salesrepShowOrderPage(Context ctx, ConnectionPool connectionPool)
    + static void customerShowOrderPage(Context ctx, ConnectionPool connectionPool)
    + static void salesrepPostCarportCalculation(Context ctx, ConnectionPool connectionPool)
    - static void showThankYouPage(Context ctx, ConnectionPool connectionPool)
    - static int createOrGetAccountId(String email, String name, String address, int zip, String phone, Context ctx, ConnectionPool connectionPool)
    }
  }

  package persistence {
    class AccountMapper{
      + static Account login(Context ctx, ConnectionPool connectionPool)
      + static int(accountId) createAccount(Context ctx, ConnectionPool connectionPool)
      + static Account getAccountById(Context ctx, ConnectionPool connectionPool)
      + static List<Account> getAllAccounts(Context ctx, ConnectionPool connectionPool)
      + static boolean updatePassword(Context ctx, ConnectionPool connectionPool)
      + static boolean updateEmail(Context ctx, ConnectionPool connectionPool)
      + static Arraylist<String> getAllEmailsFromAccount(ctx, connectionPool)
      + static Arraylist<Account> getAllAccounts(ctx, connectionPool)
      + static int getIdFromAccountEmail(email, ctx, connectionPool)

    }
    class OrderMapper{
    + static boolean createOrder(int carportWidth, int carportLength,(rest of caport info), Context ctx, ConnectionPool connectionPool)
    + static OverviewOrderAccountDto getOverviewOrderAccountDtoByOrderId(int orderId, Context ctx, ConnectionPool connectionPool)
    + static List<OverviewOrderAccountDto> getAllOverviewOrderAccountDto(Context ctx, ConnectionPool connectionPool)
    + TAG STILLING IMORGEN: static updateOrder(Context ctx, ConnectionPool connectionPool)
    + static boolean updateOrderStatus(String status, Context ctx, ConnectionPool connectionPool)
    + static List<Order> getAllOrdersByAccountId(int accountId, Context ctx, ConnectionPool connectionPool)
    }
    class OrderlineMapper{

    }

    class ItemMapper{

    }
  }

  package Services{
  package svgEngine {
    class Svg{
    - static final String SVG_OPEN_TAG_TEMPLATE
    - static final String SVG_RECTANGLE_TEMPLATE
    - static final String SVG_TEXT_TEMPLATE
    - static final String SVG_LINE_TEMPLATE
    - static final String SVG_DIM_LINE_TEMPLATE
    - static final String SVG_ARROW_DEFS
    - static final double ARROW_HALF_WIDTH
    - static final double DIM_LINE_OFFSET_ORIGIN
    - static final double EXT_LINE_OFFSET_ORIGIN
    - static final double TEXT_OFFSET_DIM_LINE
    - static final Locale LOCALE_US
    - static final Locale LOCALE_DK
    - final StringBuilder svg
    + Svg(int xMin, int yMin, int xMax, int yMax)
    + String close()
    + void addRectangle(double x, double y, double width, double height, String style)
    + void addLine(double x1, double y1, double x2, double y2, String style)
    + void addDimension(double x1, double y1, double x2, double y2, OffsetDirection offsetDirection, double offsetDistance, String stars)
    + void addDimension(double x1, double y1, double x2, double y2, OffsetDirection offsetDirection, double offsetDistance)
    + void addDimension(double x1, double y1, double x2, double y2, OffsetDirection offsetDirection)
    - void addText(String text, double x, double y, double rotation)
    - void addDimLine(double x1, double y1, double x2, double y2)
    }
    class CarportSvg{
    + static String sideView(Carport carport)
    + static String topView(Carport carport)
    }
    class Line{
    - double x1
    - double y1
    - double x2
    - double y2
    + Line()
    + Line(double x1, double y1, double x2, double y2)
    + double getX1()
    + double getY1()
    + double getX2()
    + double getY2()
    }
    enum OffsetDirection {
      UP
      DOWN
      LEFT
      RIGHT
    }
  }
  package Calculator{
  class calculatorEngine{
  }
  }
  class PasswordGenerator{
    - static final String UPPERCASE_CHARS
    - static final String LOWERCASE_CHARS
    - static final String NUMBER_CHARS
    - static final String SPECIAL_CHARS
    + static String generatePassword()
    - static char getRandomChar(String charSet)
    - static String shufflechars(String input)
    }
  }

  package entities{
     class Account{
        - int accountId
        - String name
        - String address
        - String zip
        - String phone
        - String email
        - String role
        + Account()
        + Getters()
     }

     class EmailReceipt{
     - int carportWidth
     - int carportLength
     - String trapeztag
     -int shedWidth
     - int shedLength
     - String notes
     - String name
     - String address
     - int zip
     - String city
     - String mobil
     - String email
     + EmailReceipt()
     - printMail()

     }

     class Order {
             -int orderId
             -int accountId
             -Date datePlaced
             -Date dateCompleted
             -String status
             -boolean paid
             -Date datePaid
             -double sale_price
             -int carportLengthCm
             -int carportWidthCm
             -int carportHeightCm
             -int shedLengthCm
             -int shedWidthCm
             +Order()
             +Getters()
         }
'     class Orderlines {
'         - int orderNumber
'         - int cupcakeId
'         - int quantity
'         + OrderLines(int orderNumber, int cupcakeId, int quantity)
'         + int getOrderNumber()
'         + int getCupcakeId()
'         + int getQuantity()
'         + calculateSubtotal(Cupcake cupcake)
'         + toString()
'         }

  }

  package dto {

    class OverviewOrderAccountDto {
       - int orderId
       - String name
       - String address
       - String zip
       - String city
       - String phone
       - String email
       - int carportWidthCm
       - int carportLengthCm
       - int shedWidthCm
       - int shedLengthCm
       }

  }

  package exceptions {

  class DatabaseException{
  }

  class AccountCreationException{
  }
  class OrderCreationException{
  }
  }

  }

    Main --> controllers : uses

    AccountController --> AccountMapper : uses
    OrderController --> OrderMapper : uses
    OrderMapper --> OverviewOrderAccountDto

    AccountMapper --> entities : uses
    OrderMapper --> entities : uses

    persistence -->  exceptions : uses

    Calculator <--> OrderController : carport info in, carport object out

    svgEngine <--> OrderController : carport object in, svg String out

    Calculator <-- ItemMapper

    OrderController --> OrderlineMapper : uses
@enduml